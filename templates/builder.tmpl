package $PACKAGE$;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IMarker;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import org.eclipse.core.runtime.Platform;
import org.eclipse.uide.core.UIDEBuilderBase;
import org.eclipse.uide.runtime.UIDEPluginBase;
import org.osgi.framework.Bundle;

/**
 * @author
 */
public class $LANG_NAME$IncrementalProjectBuilder extends UIDEBuilderBase {
    /**
     * Extension ID of the $LANG_NAME$ builder. Must match the ID in the corresponding
     * extension definition in plugin.xml.
     */
    public static final String BUILDER_ID= $LANG_NAME$Plugin.kPluginID + ".$LANG_NAME$Builder";

    public static final String PROBLEM_MARKER_ID= $LANG_NAME$Plugin.kPluginID + ".problem";

    protected UIDEPluginBase getPlugin() {
	return $LANG_NAME$Plugin.getInstance();
    }

    protected String getErrorMarkerID() {
	return PROBLEM_MARKER_ID;
    }

    protected String getWarningMarkerID() {
	return PROBLEM_MARKER_ID;
    }

    protected String getInfoMarkerID() {
	return PROBLEM_MARKER_ID;
    }

    protected boolean isSourceFile(IFile file) {
	IPath path= file.getRawLocation();

	if (path == null) return false;

	String fileName= path.toString();

	return (fileName.indexOf("/bin/") == -1 && "$FILE_EXTEN$".equals(path.getFileExtension()));
    }

    protected boolean isOutputFolder(IResource resource) {
	return resource.getFullPath().lastSegment().equals("bin");
    }

    protected void compile(final IFile file) {
	String fileName= file.getLocation().toOSString();

	try {
	    File parentDir= new File(fileName).getParentFile();
	    // TODO Write your code to actually compile the given source file
	    String cmd[]= new String[] { "echo", "hello" };
	    Process process= Runtime.getRuntime().exec(cmd, new String[0], parentDir);

	    doRefresh(file);
	} catch (Exception e) {
	    $LANG_NAME$Plugin.getInstance().writeErrorMsg(e.getMessage());
	    e.printStackTrace();
	}
    }
}
