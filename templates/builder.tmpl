package $PACKAGE_NAME$;

import java.io.File;
import java.io.InputStream;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IMarker;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.uide.core.SAFARIBuilderBase;
import org.eclipse.uide.runtime.SAFARIPluginBase;

import $LANG_NAME$.$CLASS_NAME_PREFIX$Plugin;

/**
 * @author
 */
public class $CLASS_NAME_PREFIX$Builder extends SAFARIBuilderBase {
    /**
     * Extension ID of the $CLASS_NAME_PREFIX$ builder. Must match the ID in the corresponding
     * extension definition in plugin.xml.
     */
    public static final String BUILDER_ID= $CLASS_NAME_PREFIX$Plugin.kPluginID + ".$CLASS_NAME_PREFIX$Builder";

    public static final String PROBLEM_MARKER_ID= $CLASS_NAME_PREFIX$Plugin.kPluginID + ".problem";

    protected SAFARIPluginBase getPlugin() {
	return $CLASS_NAME_PREFIX$Plugin.getInstance();
    }

    protected String getErrorMarkerID() {
	return PROBLEM_MARKER_ID;
    }

    protected String getWarningMarkerID() {
	return PROBLEM_MARKER_ID;
    }

    protected String getInfoMarkerID() {
	return PROBLEM_MARKER_ID;
    }

    protected boolean isSourceFile(IFile file) {
	IPath path= file.getRawLocation();

	if (path == null) return false;

	String fileName= path.toString();

	return (fileName.indexOf("/bin/") == -1 && "$FILE_EXTEN$".equals(path.getFileExtension()));
    }

    protected boolean isOutputFolder(IResource resource) {
	return resource.getFullPath().lastSegment().equals("bin");
    }

    protected void compile(final IFile file) {
	try {
		// START_HERE
//	    createMarker(file, 2, 8, 13, "Oops!", IMarker.SEVERITY_WARNING);
	    Translator trans= new Translator();
            trans.compile(file, new NullProgressMonitor());
	    doRefresh(file.getParent());
	} catch (Exception e) {
	    LegPlugin.getInstance().writeErrorMsg(e.getMessage());
	    e.printStackTrace();
	}
    }
}
